{"version":3,"sources":["Components/illustrations.js","Components/graphicDesign.js","Components/about.js","Components/webDevelopment.js","App.js","serviceWorker.js","index.js"],"names":["Illustrations","react_default","a","createElement","className","graphicDesign","about","webDevelopment","target","href","App","react_router_dom","to","react_router","exact","path","component","illustrations","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f3fb97a2.chunk.js","sourcesContent":["import React from 'react';\nimport '../Style.css';\n\n\n\nfunction Illustrations() {\n    return (\n    <div>\n       <h1 className= \"Title\">hi</h1>\n    </div>\n    )}\n\nexport default Illustrations;","import React from 'react';\nimport '../Style.css';\n\n\n\nfunction graphicDesign() {\n    return (\n    <div>\n       <h1 className= \"Title\">sup</h1>\n    </div>\n    )}\n\nexport default graphicDesign;","import React from 'react';\nimport '../Style.css';\n\n\n\nfunction about() {\n    return (\n    <div>\n       <div className=\"AboutParagraph\">\n     <p className=\"About\">Jon Friedberg moved to New York City in late Fall of 2018. Previously he hearned a Bachelor Degree in Audio Production and pursued a certificate in Animation. For the last 2-3 years, he has been programming on his own and graduated from General Assembly's Software Engineering Program in July of 2019 and continues to improve his skills.</p>\n     </div>\n     <div className=\"SkillsAndSoftware\">\n       <h2 className= \"SkillsTitle\">Skills</h2>\n     <p className=\"SkillsParagraphText\">Front-End/Back-End/Full Stack Development, HTML, CSS & CSS libraries, Javascript, React, Node.js, Express, Ruby, C, C++, Java, Drawing, Painting, 3-D Modeling, UV Unwrapping, Storyboarding, Photography, Stereo and 5.1 Recording,Mixing, & Editing; Automated Dialogue Replacement; SFX (Foley, Soft FX, Hard FX); Onset Sound; Appropriate dB Ranges for Broadcast Standards; Studio Recording, Mixing, & Editing; Microphone Placement; Signal Flow; Live Sound Reinforcement; Soldering\n    </p>\n    \n      <h2 className= \"SoftwareTitle\">Software</h2>\n    <p className=\"SoftwareParagraphText\">Visual Studio, Maya, Z-Brush, 3D Studio Max, Marvellous Designer, Substance Painter, Final Cut Pro, Adobe Suite: Premiere; Audition; Illustrator; Photoshop; After Effects; In Design, TextMate, ProTools, Logic Pro, Reason, Symphonic Orchestra, Symphonic Choirs, Word Builder, Garage Band, DVD Compressor\n    </p>  \n    </div>\n    </div>\n    )}\n\nexport default about;","import React from 'react';\nimport '../Style.css';\n\n\n\nfunction webDevelopment() {\n    return (\n\n\n<div className=\"Links\">\n      <ul>\n     <div className=\"LinkOne\">\n     <li><a target=\"_blank\" href=\"https://giftme-hjm.herokuapp.com/\">\"Wish List App\" using React and Express</a>\n     </li> \n     </div>\n     <div className=\"LinkTwo\">\n     {/* https://stackoverflow.com/questions/42914666/react-router-external-link */}\n     <li><a target=\"_blank\" href=\"https://amazing-rings.surge.sh\">Currency Converter using React</a>\n     </li>\n     </div>\n     <div className=\"LinkThree\">\n     <li><a target=\"_blank\" href=\"https://pages.git.generalassemb.ly/friedbergjon/frogger/\">\"Frogger- The Game\" made with Vanila Javascript</a>\n     </li>\n     </div>\n     </ul>\n    \n    </div>\n    )}\n\nexport default webDevelopment;","import React, { Component } from 'react';\nimport './Style.css';\nimport illustrations from './Components/illustrations'\nimport graphicDesign from './Components/graphicDesign'\nimport about from './Components/about'\nimport {BrowserRouter as Router, Route, Link, Switch, Redirect} from 'react-router-dom';\nimport webDevelopment from './Components/webDevelopment';\n\nfunction App() {\n  return (\n  <div>\n    <div>\n    <body className=\"body\">\n   \n          <Router>\n          <nav className = \"Nav\">\n               <div className = \"HeaderLinks\">\n                <Link to='/about'>About</Link>\n                <Link to='/web_development'>Web Development</Link>\n                <Link to='/illustrations'>Illustrations</Link>\n                <Link to='/graphic_design'>Graphic Design</Link>\n                </div>\n                </nav>  \n                <div className = \"Name\">\n                <h1 className = \"Title\">Jonathan Friedberg</h1>\n               </div>\n          \n                <div className =\"Components\">\n                <Switch>\n                    <Route exact path='/about' component={about}/>    \n                    <Route exact path='/web_development' component={webDevelopment}/> \n                    <Route exact path='/illustrations' component={illustrations}/>      \n                    <Route exact path='/graphic_design' component={graphicDesign}/>                      \n                </Switch>\n                </div>\n            </Router>\n           \n            </body>\n   <nav className=\"footer\"> \n   <div>\n     \n   <h2 className=\"contactEmail\">friedberg_jon@hotmail.com\n  ​</h2>\n  </div>\n  <h2 className=\"contactNumber\">(802) 829-7252\n​ </h2>\n<div>\n<h2 className=\"LinkedInLink\">www.linkedin.com/in/jonfriedberg\n​ </h2>\n</div>\n     </nav>\n     </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}